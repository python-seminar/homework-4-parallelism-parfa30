To run the program, just type 'python parallel.py' into the terminal
This will return a plot as described in the homework. It takes ~5 mins to run..

The program consists of:
- Running a simple dart function in the regular 'simple' way, using multiprocessing(pool) and also using dask.
- The program steps from 10 to 10**7 darts which gets us to ~100s of computing time
-parallel.py runs the "program" 10  times to calculate the mean and std deviation, which is plotted

I ran this test on my laptop,a MacBook Pro 2.5 GHz Intel Core i5 with 4 cores
  - I used the 4 cores available on my laptop (identified using sysctl -n hw.ncpu)
  - Instead of using IPcluster I used dask, which Dr. Bloom mentioned as being more en vogue.
  - Unfortunately dask didn't seem to perform as well as expected. I used dask bag. I think it would have been better to use dask multiprocessing, but I kept having errors when using dask.multiprocessing and I couldn't find any fix to it. 
  - The simple process was faster at first, but when there were increasingly more darts thrown, multiprocessing became faster.
 
